
@import "src/style-helpers/math";


@function hypnoblob-animation-name($iBlob) {
  @return "hypnoblob-#{$iBlob}-animation";
}

@mixin hypnoblobs($blob-count: 3, $slice-increment: 1, $spin-radius: 128px, $blob-radius: 12px) {

  $blob-size: $blob-radius * 2;
  $total-radius: $spin-radius + $blob-radius + 1;
  $total-size: $total-radius * 2;

  $initial-angle: $pi / 2;

  @for $iBlob from 0 to $blob-count {
    @keyframes #{hypnoblob-animation-name($iBlob)} {
      @for $k from 0 through $blob-count {
        $slice: ($iBlob + ($k * $slice-increment)) % $blob-count;
        $angle: $slice * 2 * $pi / $blob-count + $initial-angle;
        $animation-percent: ($k / $blob-count) * 100%;

        #{$animation-percent} {
          margin-left: $spin-radius + $spin-radius*cos($angle);
          margin-top: $spin-radius - $spin-radius*sin($angle); // +1?
        }
      }
    }

    .hypnoblob-case:nth-of-type(#{$iBlob+1}) > .hypnoblob {
      animation-name: #{hypnoblob-animation-name($iBlob)};
    }
  }

  z-index: 100;
  width: $total-size;
  height: $total-size;
  border-radius: $total-radius;
  display: block;
  margin: auto;

  .hypnoblob-case {
    position: absolute;
    width: $total-size;
    height: $total-size;
  }

  .hypnoblob {
    $color: #0bb;

    position: relative;
    background-color: #070007;
    border-radius: $blob-radius;
    width: $blob-size;
    height: $blob-size;
    animation-duration: #{$blob-count * 2}s;
    animation-iteration-count: infinite;
    box-shadow: 0 0 0.5*$blob-radius 0.5*$blob-radius $color;
  }
}


.hypnoblobs {
  @include hypnoblobs(
    $blob-count: 7,
    $slice-increment: 2,
    $spin-radius: 256px,
    $blob-radius: 12px
  );
}
